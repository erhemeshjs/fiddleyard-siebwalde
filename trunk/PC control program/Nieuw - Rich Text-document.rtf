{\rtf1\ansi\ansicpg1252\deff0{\fonttbl{\f0\fnil Consolas;}{\f1\fswiss\fcharset0 Arial;}{\f2\fnil Courier New;}}
{\colortbl ;\red0\green0\blue255;\red0\green128\blue0;\red43\green145\blue175;\red163\green21\blue21;}
{\*\generator Msftedit 5.41.15.1515;}\viewkind4\uc1\pard\lang1043\f0\fs19  \cf1 public\cf0  \cf1 int\cf0  CL_10_Heart,                                         \cf2 //1\cf0\par
                   SPARE2,                                              \cf2 //2\cf0\par
                   F11,                                                 \cf2 //3\cf0\par
                   EOS_10,                                              \cf2 //4\cf0\par
                   EOS_11,                                              \cf2 //5\cf0\par
                   SPARE3,                                              \cf2 //6\cf0\par
                   F13,                                                 \cf2 //7\cf0\par
                   F12,                                                 \cf2 //8\cf0\par
                   Bezet_Uit_5B,                                        \cf2 //9\cf0\par
                   Bezet_Uit_8A,                                        \cf2 //10\cf0\par
                   Enable_Track_Status,                                 \cf2 //11\cf0\par
                   Bezet_In_5B_Status,                                  \cf2 //12\cf0\par
                   Bezet_In_6_Status,                                   \cf2 //13\cf0\par
                   Bezet_In_7_Status,                                   \cf2 //14\cf0\par
                   Bezet_Weerstand_Status,                              \cf2 //15\cf0\par
                   Trains_On_Fiddle_Yard_Track1,                        \cf2 //16\cf0\par
                   Trains_On_Fiddle_Yard_Track2,                        \cf2 //17\cf0\par
                   Trains_On_Fiddle_Yard_Track3,                        \cf2 //18\cf0\par
                   Trains_On_Fiddle_Yard_Track4,                        \cf2 //19\cf0\par
                   Trains_On_Fiddle_Yard_Track5,                        \cf2 //20\cf0\par
                   Trains_On_Fiddle_Yard_Track6,                        \cf2 //21\cf0\par
                   Trains_On_Fiddle_Yard_Track7,                        \cf2 //22\cf0\par
                   Trains_On_Fiddle_Yard_Track8,                        \cf2 //23\cf0\par
                   Trains_On_Fiddle_Yard_Track9,                        \cf2 //24\cf0\par
                   Trains_On_Fiddle_Yard_Track10,                       \cf2 //25\cf0\par
                   Trains_On_Fiddle_Yard_Track11,                       \cf2 //26\cf0\par
                   Bezet_Uit_6,                                         \cf2 //27\cf0\par
                   Bezet_Uit_7,                                         \cf2 //28\cf0\par
                   TR_MEAS,                                             \cf2 //29\cf0\par
                   F10,                                                 \cf2 //30\cf0\par
                   M10_Status;                                          \cf2 //31\cf0\par
\par
        \cf1 public\cf0  \cf1 int\cf0  Track_Nr;                                            \cf2 //32\par
\cf0\f1\fs20\par
\par
\par
\cf1\f2\fs19 using\cf0  System;\par
\cf1 using\cf0  System.Collections.Generic;\par
\cf1 using\cf0  System.Linq;\par
\cf1 using\cf0  System.Text;\par
\cf1 using\cf0  System.Windows.Forms;\par
\par
\cf1 namespace\cf0  Siebwalde_Application\par
\{\par
    \cf1 struct\cf0  \cf3 DataVariables\cf0\par
    \{\par
        \cf1 public\cf0  \cf1 int\cf0  CL_10_Heart,                                         \cf2 //1\cf0\par
                   SPARE2,                                              \cf2 //2\cf0\par
                   F11,                                                 \cf2 //3\cf0\par
                   EOS_10,                                              \cf2 //4\cf0\par
                   EOS_11,                                              \cf2 //5\cf0\par
                   SPARE3,                                              \cf2 //6\cf0\par
                   F13,                                                 \cf2 //7\cf0\par
                   F12,                                                 \cf2 //8\cf0\par
                   Bezet_Uit_5B,                                        \cf2 //9\cf0\par
                   Bezet_Uit_8A,                                        \cf2 //10\cf0\par
                   Enable_Track_Status,                                 \cf2 //11\cf0\par
                   Bezet_In_5B_Status,                                  \cf2 //12\cf0\par
                   Bezet_In_6_Status,                                   \cf2 //13\cf0\par
                   Bezet_In_7_Status,                                   \cf2 //14\cf0\par
                   Bezet_Weerstand_Status,                              \cf2 //15\cf0\par
                   Trains_On_Fiddle_Yard_Track1,                        \cf2 //16\cf0\par
                   Trains_On_Fiddle_Yard_Track2,                        \cf2 //17\cf0\par
                   Trains_On_Fiddle_Yard_Track3,                        \cf2 //18\cf0\par
                   Trains_On_Fiddle_Yard_Track4,                        \cf2 //19\cf0\par
                   Trains_On_Fiddle_Yard_Track5,                        \cf2 //20\cf0\par
                   Trains_On_Fiddle_Yard_Track6,                        \cf2 //21\cf0\par
                   Trains_On_Fiddle_Yard_Track7,                        \cf2 //22\cf0\par
                   Trains_On_Fiddle_Yard_Track8,                        \cf2 //23\cf0\par
                   Trains_On_Fiddle_Yard_Track9,                        \cf2 //24\cf0\par
                   Trains_On_Fiddle_Yard_Track10,                       \cf2 //25\cf0\par
                   Trains_On_Fiddle_Yard_Track11,                       \cf2 //26\cf0\par
                   Bezet_Uit_6,                                         \cf2 //27\cf0\par
                   Bezet_Uit_7,                                         \cf2 //28\cf0\par
                   TR_MEAS,                                             \cf2 //29\cf0\par
                   F10,                                                 \cf2 //30\cf0\par
                   M10_Status;                                          \cf2 //31\cf0\par
\par
        \cf1 public\cf0  \cf1 int\cf0  Track_Nr;                                            \cf2 //32\cf0\par
    \};\par
\par
\par
    \cf1 public\cf0  \cf1 class\cf0  \cf3 Controller\cf0\par
    \{\par
        \cf1 private\cf0  \cf3 Receiver\cf0  _receiver;\par
        \cf1 private\cf0  \cf1 int\cf0  _poort;\par
        \cf1 private\cf0  \cf3 SetTextCallback\cf0  m_callback = \cf1 null\cf0 ;\par
\par
        \cf1 private\cf0  \cf1 const\cf0  \cf1 int\cf0  TOP = 1;\par
        \cf1 private\cf0  \cf1 const\cf0  \cf1 int\cf0  BOTTOM = 0;\par
\par
        \cf1 private\cf0  \cf3 DataVariables\cf0 [] _DataVariables = \cf1 new\cf0  \cf3 DataVariables\cf0 [2];\par
\par
\cf1         #region\cf0  Translator\par
         \par
        \cf1 string\cf0 [] Message = \cf1 new\cf0  \cf1 string\cf0 [48] \{\par
                                \cf4 "0"\cf0 ,\par
                                \cf4 "Bridge Open Ok"\cf0 ,\par
                                \cf4 "Bridge Close Ok"\cf0 ,\par
                                \cf4 "Fiddle One Left Ok"\cf0 ,\par
                                \cf4 "Fiddle One Right Ok"\cf0 ,\par
                                \cf4 "Fiddle Multiple Left Ok"\cf0 ,\par
                                \cf4 "Fiddle Multiple Right Ok"\cf0 ,\par
                                \cf4 "Train Detection Finished"\cf0 ,\par
                                \cf4 "Train Drive Out Finished"\cf0 ,\par
                                \cf4 "Train Drive In Finished"\cf0 ,\par
                                \cf4 "0"\cf0 ,\par
                                \cf4 "Init Done"\cf0 ,\par
                                \cf4 "Bridge Opening"\cf0 ,\par
                                \cf4 "Bridge Closing"\cf0 ,\par
                                \cf4 "Init Started"\cf0 ,\par
                                \cf4 "Train On 5B"\cf0 ,\par
                                \cf4 "Train Drive In Start"\cf0 ,\par
                                \cf4 "Train On 8A"\cf0 ,\par
                                \cf4 "Train Drive Out Start"\cf0 ,\par
                                \cf4 "Fiddle Yard Soft Start"\cf0 ,\par
                                \cf4 "Fiddle Yard Stopped"\cf0 ,\par
                                \cf4 "Fiddle Yard Reset"\cf0 ,\par
                                \cf4 "Bezet Uit Blok 6"\cf0 ,\par
                                \cf4 "Sensor F12 High"\cf0 ,\par
                                \cf4 "Bezet Uit Blok 6 AND Sensor F12"\cf0 ,\par
                                \cf4 "CL 10 Heart Sensor"\cf0 ,\par
                                \cf4 "Bridge Open Close Timeout Expired"\cf0 ,\par
                                \cf4 "Train Drive In Failed F12"\cf0 ,\par
                                \cf4 "BridgeMotorContact 10"\cf0 ,\par
                                \cf4 "Bridge 10L Contact"\cf0 ,\par
                                \cf4 "Bridge 10R Contact"\cf0 ,\par
                                \cf4 "BridgeMotorContact 11"\cf0 ,\par
                                \cf4 "EndOffStroke 11"\cf0 ,\par
                                \cf4 "Laatste Spoor"\cf0 ,\par
                                \cf4 "EndOffStroke 10"\cf0 ,\par
                                \cf4 "Universal Error"\cf0 ,\par
                                \cf4 "Collect Finished Fy Full"\cf0 ,\par
                                \cf4 "Collect On"\cf0 ,\par
                                \cf4 "Collect Off"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 1"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 2"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 3"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 4"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 11"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 12"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 13"\cf0 ,\par
                                \cf4 "Bridge Opening Msg 14"\cf0 ,\par
                                \cf4 "Train Drive Out Cancelled"\cf0                             \par
                            \};\par
\par
\cf1         #endregion\cf0  Translator\par
\par
\par
        \cf1 public\cf0  Controller(\cf1 int\cf0  poort, \cf3 SetTextCallback\cf0  callback)\par
        \{\par
            _poort = poort;\par
            m_callback = callback;\par
\par
        \}\par
\par
        \cf1 public\cf0  \cf1 void\cf0  Start()\par
        \{\par
            _receiver = \cf1 new\cf0  \cf3 Receiver\cf0 (_poort);\par
            _receiver.NewData += HandleNewData;\par
            _receiver.Start();\par
        \}\par
\par
        \cf1 public\cf0  \cf1 void\cf0  HandleNewData(\cf1 byte\cf0 [] b)\par
        \{\par
            \cf2 //MessageBox.Show(Encoding.UTF8.GetString(b, 0, b.Length)); // for temp testing raw data in messagebox\cf0\par
            \cf2 //control do something with data      \cf0\par
            \par
            \cf1 string\cf0  _b = \cf3 Encoding\cf0 .UTF8.GetString(b, 0, b.Length);        \cf2 // convert received byte array to string array\cf0\par
\par
            \cf2 //m_callback(_b + Environment.NewLine, TOP);                     // for temp testing raw data\cf0\par
            \par
\cf1             #region\cf0  Data To Variable or text\par
                                                                            \cf2 // SetText_ReceivedCmd(string text, int Layer, int Indicator, int Val)\cf0\par
            \cf1 if\cf0  (_b[0] == \cf4 'M'\cf0  || _b[0] == \cf4 'Z'\cf0 )\par
            \{\par
                \cf1 int\cf0  i = 0;\par
                \cf1 if\cf0  (_b[0] == \cf4 'M'\cf0 )\par
                \{\par
                    i = TOP;\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'Z'\cf0 )\par
                \{\par
                    i = BOTTOM;\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].CL_10_Heart != (b[1] & 0x80))\par
                \{\par
                    _DataVariables[i].CL_10_Heart = (b[1] & 0x80)>>8;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " CL 10 Heart "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].CL_10_Heart) + \cf3 Environment\cf0 .NewLine, i, 1,  _DataVariables[i].CL_10_Heart);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].SPARE2 != (b[1] & 0x40))\par
                \{\par
                    _DataVariables[i].SPARE2 = (b[1] & 0x40)>>7;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " SPARE2 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].SPARE2) + \cf3 Environment\cf0 .NewLine, i, 2, _DataVariables[i].SPARE2);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].F11 != (b[1] & 0x20))\par
                \{\par
                    _DataVariables[i].F11 = (b[1] & 0x20);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " F11 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].F11) + \cf3 Environment\cf0 .NewLine, i, 3, _DataVariables[i].F11);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].EOS_10 != (b[1] & 0x10))\par
                \{\par
                    _DataVariables[i].EOS_10 = (b[1] & 0x10);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " EOS 10 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].EOS_10) + \cf3 Environment\cf0 .NewLine, i, 4, _DataVariables[i].EOS_10);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].EOS_11 != (b[1] & 0x8))\par
                \{\par
                    _DataVariables[i].EOS_11 = (b[1] & 0x8);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " EOS 11 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].EOS_11) + \cf3 Environment\cf0 .NewLine, i, 5, _DataVariables[i].EOS_11);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].SPARE3 != (b[1] & 0x4))\par
                \{\par
                    _DataVariables[i].SPARE3 = (b[1] & 0x4);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " SPARE3 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].SPARE3) + \cf3 Environment\cf0 .NewLine, i, 6, _DataVariables[i].SPARE3);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].F13 != (b[1] & 0x2))\par
                \{\par
                    _DataVariables[i].F13 = (b[1] & 0x2);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " F13 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].F13) + \cf3 Environment\cf0 .NewLine, i, 7, _DataVariables[i].F13);\par
                \}                            \par
            \}\par
\par
            \cf1 if\cf0  (_b[0] == \cf4 'L'\cf0  || _b[0] == \cf4 'Y'\cf0 )\par
            \{\par
                \cf1 int\cf0  i = 0;\par
                \cf1 if\cf0  (_b[0] == \cf4 'L'\cf0 )\par
                \{\par
                    i = TOP;\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'Y'\cf0 )\par
                \{\par
                    i = BOTTOM;\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Track_Nr != (b[1] & 0xF0))\par
                \{\par
                    _DataVariables[i].Track_Nr = (b[1] & 0xF0);\par
\par
                    \cf1 int\cf0  a = \cf3 Convert\cf0 .ToInt16(b[1]) >> 4;\par
\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Track Nr "\cf0  + \cf3 Convert\cf0 .ToString(a) + \cf3 Environment\cf0 .NewLine, i, 32, a);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].F12 != (b[1] & 0x8))\par
                \{\par
                    _DataVariables[i].F12 = (b[1] & 0x8);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " F12 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].F12) + \cf3 Environment\cf0 .NewLine, i, 8, _DataVariables[i].F12);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_Uit_5B != (b[1] & 0x4))\par
                \{\par
                    _DataVariables[i].Bezet_Uit_5B = (b[1] & 0x4);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet Uit 5B "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_Uit_5B) + \cf3 Environment\cf0 .NewLine, i, 9, _DataVariables[i].Bezet_Uit_5B);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_Uit_8A != (b[1] & 0x2))\par
                \{\par
                    _DataVariables[i].Bezet_Uit_8A = (b[1] & 0x2);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet Uit 8A "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_Uit_8A) + \cf3 Environment\cf0 .NewLine, i, 10, _DataVariables[i].Bezet_Uit_8A);\par
                \}\par
            \}\par
\par
            \cf1 if\cf0  (_b[0] == \cf4 'K'\cf0  || _b[0] == \cf4 'X'\cf0 )\par
            \{\par
                \cf1 int\cf0  i = 0;\par
                \cf1 if\cf0  (_b[0] == \cf4 'K'\cf0 )\par
                \{\par
                    i = TOP;\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'X'\cf0 )\par
                \{\par
                    i = BOTTOM;\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Enable_Track_Status != (b[1] & 0x80))\par
                \{\par
                    _DataVariables[i].Enable_Track_Status = (b[1] & 0x80)>>8;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Enable Track "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Enable_Track_Status) + \cf3 Environment\cf0 .NewLine, i, 11, _DataVariables[i].Enable_Track_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_In_5B_Status != (b[1] & 0x40))\par
                \{\par
                    _DataVariables[i].Bezet_In_5B_Status = (b[1] & 0x40)>>7;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet In 5B "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_In_5B_Status) + \cf3 Environment\cf0 .NewLine, i, 12, _DataVariables[i].Bezet_In_5B_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_In_6_Status != (b[1] & 0x20))\par
                \{\par
                    _DataVariables[i].Bezet_In_6_Status = (b[1] & 0x20)>>6;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet In 6 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_In_6_Status) + \cf3 Environment\cf0 .NewLine, i, 13, _DataVariables[i].Bezet_In_6_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_In_7_Status != (b[1] & 0x10))\par
                \{\par
                    _DataVariables[i].Bezet_In_7_Status = (b[1] & 0x10)>>5;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet In 7 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_In_7_Status) + \cf3 Environment\cf0 .NewLine, i, 14, _DataVariables[i].Bezet_In_7_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_Weerstand_Status != (b[1] & 0x8))\par
                \{\par
                    _DataVariables[i].Bezet_Weerstand_Status = (b[1] & 0x8)>>4;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet Weerstand "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_Weerstand_Status) + \cf3 Environment\cf0 .NewLine, i, 15, _DataVariables[i].Bezet_Weerstand_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track1 != (b[1] & 0x4))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track1 = (b[1] & 0x4)>>3;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track1 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track1) + \cf3 Environment\cf0 .NewLine, i, 16, _DataVariables[i].Trains_On_Fiddle_Yard_Track1);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track2 != (b[1] & 0x2))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track2 = (b[1] & 0x2)>>2;\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track2 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track2) + \cf3 Environment\cf0 .NewLine, i, 17, _DataVariables[i].Trains_On_Fiddle_Yard_Track2);\par
                \}                \par
            \}\par
\par
            \cf1 if\cf0  (_b[0] == \cf4 'J'\cf0  || _b[0] == \cf4 'W'\cf0 )\par
            \{\par
                \cf1 int\cf0  i = 0;\par
                \cf1 if\cf0  (_b[0] == \cf4 'J'\cf0 )\par
                \{\par
                    i = TOP;\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'W'\cf0 )\par
                \{\par
                    i = BOTTOM;\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track4 != (b[1] & 0x80))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track4 = (b[1] & 0x80);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track4 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track4) + \cf3 Environment\cf0 .NewLine, i, 18, _DataVariables[i].Trains_On_Fiddle_Yard_Track4);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track5 != (b[1] & 0x40))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track5 = (b[1] & 0x40);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track5 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track5) + \cf3 Environment\cf0 .NewLine, i, 19, _DataVariables[i].Trains_On_Fiddle_Yard_Track5);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track6 != (b[1] & 0x20))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track6 = (b[1] & 0x20);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track6 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track6) + \cf3 Environment\cf0 .NewLine, i, 20, _DataVariables[i].Trains_On_Fiddle_Yard_Track6);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track7 != (b[1] & 0x10))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track7 = (b[1] & 0x10);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track7 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track7) + \cf3 Environment\cf0 .NewLine, i, 21, _DataVariables[i].Trains_On_Fiddle_Yard_Track7);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track8 != (b[1] & 0x8))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track8 = (b[1] & 0x8);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track8 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track8) + \cf3 Environment\cf0 .NewLine, i, 22, _DataVariables[i].Trains_On_Fiddle_Yard_Track8);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track9 != (b[1] & 0x4))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track9 = (b[1] & 0x4);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track9 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track9) + \cf3 Environment\cf0 .NewLine, i, 23, _DataVariables[i].Trains_On_Fiddle_Yard_Track9);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track10 != (b[1] & 0x2))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track10 = (b[1] & 0x2);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track10 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track10) + \cf3 Environment\cf0 .NewLine, i, 24, _DataVariables[i].Trains_On_Fiddle_Yard_Track10);\par
                \}                \par
            \}\par
\par
            \cf1 if\cf0  (_b[0] == \cf4 'I'\cf0  || _b[0] == \cf4 'V'\cf0 )\par
            \{\par
                \cf1 int\cf0  i = 0;\par
                \cf1 if\cf0  (_b[0] == \cf4 'I'\cf0 )\par
                \{\par
                    i = TOP;\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'V'\cf0 )\par
                \{\par
                    i = BOTTOM;\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_Uit_6 != (b[1] & 0x80))\par
                \{\par
                    _DataVariables[i].Bezet_Uit_6 = (b[1] & 0x80);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet Uit 6 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_Uit_6) + \cf3 Environment\cf0 .NewLine, i, 25, _DataVariables[i].Bezet_Uit_6);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Bezet_Uit_7 != (b[1] & 0x40))\par
                \{\par
                    _DataVariables[i].Bezet_Uit_7 = (b[1] & 0x40);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Bezet Uit 7 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Bezet_Uit_7) + \cf3 Environment\cf0 .NewLine, i, 26, _DataVariables[i].Bezet_Uit_7);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].TR_MEAS != (b[1] & 0x20))\par
                \{\par
                    _DataVariables[i].TR_MEAS = (b[1] & 0x20);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " TR MEAS "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].TR_MEAS) + \cf3 Environment\cf0 .NewLine, i, 27, _DataVariables[i].TR_MEAS);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].F10 != (b[1] & 0x10))\par
                \{\par
                    _DataVariables[i].F10 = (b[1] & 0x10);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " F10 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].F10) + \cf3 Environment\cf0 .NewLine, i, 28, _DataVariables[i].F10);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].M10_Status != (b[1] & 0x8))\par
                \{\par
                    _DataVariables[i].M10_Status = (b[1] & 0x8);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " M10 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].M10_Status) + \cf3 Environment\cf0 .NewLine, i, 29, _DataVariables[i].M10_Status);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track3 != (b[1] & 0x4))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track3 = (b[1] & 0x4);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track3 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track3) + \cf3 Environment\cf0 .NewLine, i, 30, _DataVariables[i].Trains_On_Fiddle_Yard_Track3);\par
                \}\par
                \cf1 if\cf0  (_DataVariables[i].Trains_On_Fiddle_Yard_Track11 != (b[1] & 0x2))\par
                \{\par
                    _DataVariables[i].Trains_On_Fiddle_Yard_Track11 = (b[1] & 0x2);\par
                    m_callback(\cf3 DateTime\cf0 .Now + \cf4 " Trains On Fiddle Yard Track11 "\cf0  + \cf3 Convert\cf0 .ToBoolean(_DataVariables[i].Trains_On_Fiddle_Yard_Track11) + \cf3 Environment\cf0 .NewLine, i, 31, _DataVariables[i].Trains_On_Fiddle_Yard_Track11);\par
                \}                \par
            \}\par
\par
            \cf1 if\cf0  (_b[0] == \cf4 'A'\cf0  || _b[0] == \cf4 'B'\cf0 )\par
            \{\par
                \cf1 if\cf0  (_b[0] == \cf4 'A'\cf0 )\par
                \{\par
                    \cf1 if\cf0  (b[1] <= Message.Length)\par
                    \{\par
                        m_callback(\cf3 DateTime\cf0 .Now + \cf4 " "\cf0  + Message[b[1]] + \cf3 Environment\cf0 .NewLine, TOP, 0, 0);\par
                    \}\par
                \}\par
                \cf1 if\cf0  (_b[0] == \cf4 'B'\cf0 )\par
                \{\par
                    \cf1 if\cf0  (b[1] <= Message.Length)\par
                    \{\par
                        m_callback(\cf3 DateTime\cf0 .Now + \cf4 " "\cf0  + Message[b[1]] + \cf3 Environment\cf0 .NewLine, BOTTOM, 0, 0);\par
                    \}\par
                \}\par
            \}\par
\par
\cf1             #endregion\cf0  Data To Variable or text\par
\par
        \}\par
    \}\par
\}\par
\par
\f1\fs20\par
}
 